{"version":3,"sources":["webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html"],"names":["routes","path","component","AccountRoutingModule","forChild","declarations","imports","exports","AccountModule","LoginComponent","accountService","router","activatedRoute","returnUrl","snapshot","queryParams","createLoginForm","loginForm","email","required","pattern","password","login","value","subscribe","navigateByUrl","error","console","log","onSubmit","selector","templateUrl","styleUrls","RegisterComponent","fb","createRegisterForm","registerForm","group","displayName","validateEmailNotTaken","register","response","errors","control","pipe","checkEmailExists","res","emailExists"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AccountService } from '../account.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  returnUrl: string;\r\n\r\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\r\n    this.createLoginForm();\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators\r\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accountService.login(this.loginForm.value).subscribe(() => {\r\n      this.router.navigateByUrl(this.returnUrl);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center mt-5\">\r\n    <div class=\"col-3\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"text-center mb-4\">\r\n          <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\r\n        </div>\r\n  \r\n        <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\r\n        <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\r\n       \r\n        <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n      </form>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\r\nimport { AccountService } from '../account.service';\r\nimport { Router } from '@angular/router';\r\nimport { timer, of } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  errors: string[];\r\n\r\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      displayName: [null, [Validators.required]],\r\n      email: [null,\r\n        [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\r\n        [this.validateEmailNotTaken()]\r\n      ],\r\n      password: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accountService.register(this.registerForm.value).subscribe(response => {\r\n      this.router.navigateByUrl('/shop');\r\n    }, error => {\r\n      console.log(error);\r\n      this.errors = error.errors;\r\n    });\r\n  }\r\n\r\n  validateEmailNotTaken(): AsyncValidatorFn {\r\n    return control => {\r\n      return timer(500).pipe(\r\n        switchMap(() => {\r\n          if (!control.value) {\r\n            return of(null);\r\n          }\r\n          return this.accountService.checkEmailExists(control.value).pipe(\r\n            map(res => {\r\n              return res ? { emailExists: true } : null;\r\n            })\r\n          );\r\n        })\r\n      );\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center mt-5\">\r\n    <div class=\"col-3\">\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"text-center mb-4\">\r\n          <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n        </div>\r\n  \r\n        <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\r\n        <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\r\n        <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\r\n\r\n        <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\r\n            <li *ngFor=\"let error of errors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n       \r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  </div>"]}